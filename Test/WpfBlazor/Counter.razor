@using Microsoft.AspNetCore.Components.Forms
@using WpfBlazor
@using MW.Blazor
@using BlazorCustomInput.Components
<h1>Counter</h1>

<EditForm Model="Model">
    <EditerSelect IsDisabled="false" Source="()=>tests" @bind-Value="Model" OptionContents="@((val)=>val is null?"":$" {val.Name}({val.GetHashCode()})")" @onchange="OnChangeEvent">
    </EditerSelect>

    <EditerAutocomplete CompleteCallBack="OnComplete" GetAutocomleteItems="OnSearch" @bind-Value="Model.Name">
    <LoadingTemplate>
        <span>Loading</span>
    </LoadingTemplate>
    <AutocompleteFrame Context="model">
            <div style="background-color:aqua">
                @foreach (var node in model)
                {
                    <p>
                        <a @onclick="node.Selected">@node.Value</a>
                    </p>
                }
            </div>
    </AutocompleteFrame>
</EditerAutocomplete>

</EditForm>
<EditerConvertibleSelect IsDisabled="true" ChoosePromptContents="choose..." @bind-Value="id" OptionContents="(a)=>a.Name" Source="()=>tests" ValueConverter="@((a)=>a.Id)">
</EditerConvertibleSelect>
<p>@Model.Name</p>
<p>@id</p>
<button @onclick="OnBtnClickAsync">debug</button>
@code {
    int id=2;
    public BindModel Model { get; set; } = new() {Id=5, Name = "hazimete" };
    Microsoft.AspNetCore.Components.Forms.InputText input;
    List<BindModel> tests = new()
    {
        new BindModel{Name="アメリ小田原5",Id=1},
        new BindModel{Name="ハチ公アメリ前5",Id=2},
        new BindModel{Name="日本",Id=3},
        new BindModel{Name="アメリカ5",Id=4},
    };




    protected override async Task OnInitializedAsync()
    {
        // Model = new();
        await base.OnInitializedAsync();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    async Task<string[]> OnSearch(string value)
    {
        await Task.Delay(2000);
        return tests.Where(t => t.Name.Contains(value)).Select(t => t.Name).ToArray();
    }

    async void OnComplete()
    {
        await Task.Run(() =>
        {
            System.Diagnostics.Debug.WriteLine(Model.Name);
        });

        //System.Diagnostics.Debug.Assert(false);
    }

    async Task OnBtnClickAsync()
    {
        await Task.Run(() =>
        {
            System.Diagnostics.Debug.WriteLine("m "+Model.Name);
        });
    }

    void OnChangeEvent(ChangeEventArgs e)
    {
        System.Diagnostics.Debug.WriteLine(e.Value.ToString());
    }
}