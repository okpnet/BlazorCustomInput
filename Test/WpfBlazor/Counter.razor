@using WpfBlazor
@using MW.Blazor
@using BlazorCustomInput.Components
<h1>Counter</h1>



<TestEditAutcomplete CompleteCallBack="OnComplete" GetAutocomleteItems="OnSearch" @bind-Value="Model.Name">
    <LoadingTemplate>
        <span>Loading</span>
    </LoadingTemplate>
    <test>
        <div style="background-color:aqua">
            @foreach(var node in context)
            {
                <p>@node.Value</p>
            }
        </div>
    </test>
</TestEditAutcomplete>

@code {
    public BindModel Model { get; set; } = new();

    List<BindModel> tests = new()
    {
        new BindModel{Name="アメリ小田原5",Id=1},
        new BindModel{Name="ハチ公アメリ前5",Id=2},
        new BindModel{Name="日本",Id=3},
        new BindModel{Name="アメリカ5",Id=4},
    };

    protected override async Task OnInitializedAsync()
    {
        Model = new();
        await base.OnInitializedAsync();
    }

    async Task<IEnumerable<string>> OnSearch(string value)
    {
        await Task.Delay(2000);
        return tests.Where(t => t.Name.Contains(value)).Select(t => t.Name);
    }

    void OnComplete()
    {
        System.Diagnostics.Debug.Assert(true);
    }
}