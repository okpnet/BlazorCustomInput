@using Microsoft.AspNetCore.Components.Forms
@using BlazorCustomInput.Base
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Rendering
@using System.Diagnostics.CodeAnalysis

@typeparam TVal
@inherits CustomComponentBase<TVal>

    <select class="@CssClass" value="">

    </select>
<InputSelect @bind-Value:get="selected" @bind-Value:set="SetSelected" class="form-control">
    <option value="">Select an option</option>
    @foreach (var value in ListOtherObjects)
    {
        <option value="@value.Id">@value.name</option>
    }
</InputSelect>

@code {
    /// <summary>
    /// Gets or sets the associated <see cref="ElementReference"/>.
    /// <para>
    /// May be <see langword="null"/> if accessed before the component is rendered.
    /// </para>
    /// </summary>
    [DisallowNull] public ElementReference? Element { get => componentElement; protected set => componentElement = value; }
    private string selected = null!;
    private List<T> ListOtherObjects = new();
    public object objects { get; set; } = new();

    void SetSelected(string value)
    {
        InputSelect
        var _ = ListOtherObjects.Find(e => e.Id == value);
        if (_ != null)
            object.apple = _;
        selected = value;
    }
}